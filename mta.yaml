_schema-version: '3.1'
ID: mtxs-bookshop
version: 0.0.1
description: "MTXS Beershop"
parameters:
  enable-parallel-deployments: true
build-parameters:
  before-all:
    - builder: custom
      commands:
        - npx -p @sap/cds-dk cds build --production
modules:
  # --------------------- APPROUTER MODULE -------------------------------------
  - name: mtxs-bookshop
    type: html5
    path: approuter
    build-parameters:
      ignore: ["node_modules/"]
    parameters:
      memory: 128M
      disk-quota: 512M
      keep-existing-routes: true
      tenant-separator: '-'
      app-domain: ${app-name}.${default-domain}
    properties:
      TENANT_HOST_PATTERN: '^(.*)${tenant-separator}${app-name}.${default-domain}'
      SEND_XFRAMEOPTIONS: false
      CJ_PROTECT_WHITELIST: >
        [
          {
            "protocol": "https",
            "host": "*.ondemand.com"
          }
        ]
    requires:
    - name: mtxs-bookshop-uaa
    - name: srv-api
      group: destinations
      properties:
        name: srv
        url: ~{srv-url}
        forwardAuthToken: true
    provides:
      - name: mtxs-bookshop-approuter
        properties:
           app-url: ${default-url}
           application: ${app-name}
           tenant-separator: ${tenant-separator}
           app-domain: ${app-domain}
  # --------------------- SERVER MODULE -------------------------------------
  - name: mtxs-bookshop-srv
    type: nodejs
    path: gen/srv
    parameters:
      memory: 256M
      buildpack: nodejs_buildpack
    properties:
      tenantSeparator: ~{mtxs-bookshop-approuter/tenant-separator}
      appDomain: ~{mtxs-bookshop-approuter/app-domain}
      approuterUrl: ~{mtxs-bookshop-approuter/app-url}
      appName: ~{mtxs-bookshop-approuter/application}
      brokerName: ~{mtxs-bookshop-api-sb-srv/app-name}
      brokerUrl: ~{mtxs-bookshop-api-sb-srv/srv-url}
      srvUrl: 'https://${app-name}.${default-domain}'
    build-parameters:
      builder: npm-ci
      ignore: ["node_modules/"]
    provides:
      - name: srv-api # required by consumers of CAP services (e.g. approuter)
        properties:
          srv-url: ${default-url}
      - name: mtx-api # required by SaaS Registry
        properties:
          mtx-url: ${default-url}
    requires:
      - name: mtxs-bookshop-db
      - name: mtxs-bookshop-destination
      - name: mtxs-bookshop-uaa
      - name: mtxs-bookshop-registry
      - name: mtxs-bookshop-approuter
      - name: mtxs-bookshop-api-sb-srv
      - name: mtxs-bookshop-credstore
# --------------------- BROKER MODULE -------------------------------------
  - name: mtxs-bookshop-api-sb
    type: nodejs
    path: broker/
    build-parameters:
      builder: npm-ci
      ignore: ['node_modules/', 'default-*.json', 'manifest*.yml']
    parameters:
      app-name: mtxs-bookshop-api-sb-${space}
      memory: 64MB
      disk-quota: 265MB
    requires:
      - name: mtxs-bookshop-uaa
      - name: srv-api
        properties:
          SBF_SERVICE_CONFIG:
              MTXS Bookshop API:
                extend_credentials:
                  shared:
                    apiUrl: ~{srv-url}
                # extend_xssecurity:
                #   per_plan:
                #     default: 
                #       authorities: 
                #       - $XSMASTERAPPNAME.plan_default
                #     premium: 
                #       authorities: 
                #       - $XSMASTERAPPNAME.plan_premium
                extend_catalog:
                  metadata:
                     displayName : MTXS Bookshop API ${space}
          SBF_ENABLE_AUDITLOG: false
    provides:
      - name: mtxs-bookshop-api-sb-srv
        properties:
          app-name: ${app-name}
          srv-url: ${default-url}

resources:
  - name: mtxs-bookshop-uaa
    type: org.cloudfoundry.managed-service
    parameters:
      service: xsuaa
      service-plan: broker  
      path: ./xs-security.json
      config:
        xsappname: mtxs-bookshop-${space}
        tenant-mode: shared  
  - name: mtxs-bookshop-destination
    type: org.cloudfoundry.managed-service
    parameters:
      service: destination
      service-plan: lite
  - name: mtxs-bookshop-db
    type: org.cloudfoundry.managed-service
    parameters:
      service: service-manager
      service-plan: container
    properties:
      hdi-service-name: ${service-name}
  - name: mtxs-bookshop-registry
    type: org.cloudfoundry.managed-service
    requires:
      - name: mtx-api
    parameters:
      service: saas-registry
      service-plan: application
      config:
        xsappname: mtxs-bookshop-${space}
        appName: mtxs-bookshop
        displayName: mtxs-bookshop
        description: MTXS Bookshop
        category: 'Category'
        appUrls:
          getDependencies: ~{mtx-api/mtx-url}/-/cds/saas-provisioning/dependencies
          onSubscription: ~{mtx-api/mtx-url}/-/cds/saas-provisioning/tenant/{tenantId}
          onSubscriptionAsync: true
          onUnSubscriptionAsync: true
          onUpdateDependenciesAsync: true
          callbackTimeoutMillis: 300000 # Increase if your deployments are taking longer than that
  # ----------------- CREDENTIAL STORE  -----------------------
  - name: mtxs-bookshop-credstore
  # -----------------------------------------------------------
    type: org.cloudfoundry.managed-service
    parameters:
      service: credstore
      service-name: mtxs-bookshop-credstore-${space}
      service-plan: free
      config: 
         authentication:
              type: basic
